{
  "version": 3,
  "sources": ["src/config.ts", "src/sw.ts"],
  "sourcesContent": ["export const DB_STORE_NAME = 'app-study-db';\r\nexport const DB_VERSION = 1;\r\nexport const CACHE_KEY = 'app-study-cache';\r\ndeclare const process: { env: { NODE_ENV: string } };\r\nexport const publicPath = process.env.NODE_ENV === 'development' ? '/' : '/app-study/';", "import { CACHE_KEY } from \"./config\";\r\nimport { FetchEvent } from \"./interface\";\r\nimport { publicPath } from './config'\r\n\r\nconst CACHES = [\r\n    '',\r\n    'index.html',\r\n    'manifest.json',\r\n    'favicon.ico',\r\n    'static/bundle.js',\r\n    'img/frozen.css',\r\n    'mg/math.png',\r\n    'img/study-48x48.png'\r\n].map(p => `${publicPath}${p}`)\r\n\r\nself.addEventListener('install', function (_event) {\r\n    const event = _event as FetchEvent\r\n    event.waitUntil(Promise.all([\r\n        caches.open(CACHE_KEY).then(cache => cache.addAll(CACHES)),\r\n        self['skipWaiting']()\r\n    ]))\r\n})\r\nself.addEventListener('activate', function (_event) {\r\n    const event = _event as FetchEvent\r\n    event.waitUntil(Promise.all([\r\n        self['clients'].claim(),\r\n        caches.keys().then(names => Promise.all(names.map(n => {\r\n            if (n !== CACHE_KEY) {\r\n                return caches.delete(n)\r\n            }\r\n        })))\r\n    ]))\r\n})\r\n"],
  "mappings": "MAEO,IAAMA,EAAY,kBAEZC,EAA4D,cCAzE,IAAMC,EAAS,CACX,GACA,aACA,gBACA,cACA,mBACA,iBACA,cACA,qBACJ,EAAE,IAAIC,GAAK,GAAGC,CAAU,GAAGD,CAAC,EAAE,EAE9B,KAAK,iBAAiB,UAAW,SAAUE,EAAQ,CACjCA,EACR,UAAU,QAAQ,IAAI,CACxB,OAAO,KAAKC,CAAS,EAAE,KAAKC,GAASA,EAAM,OAAOL,CAAM,CAAC,EACzD,KAAK,YAAe,CACxB,CAAC,CAAC,CACN,CAAC,EACD,KAAK,iBAAiB,WAAY,SAAUG,EAAQ,CAClCA,EACR,UAAU,QAAQ,IAAI,CACxB,KAAK,QAAW,MAAM,EACtB,OAAO,KAAK,EAAE,KAAKG,GAAS,QAAQ,IAAIA,EAAM,IAAIC,GAAK,CACnD,GAAIA,IAAMH,EACN,OAAO,OAAO,OAAOG,CAAC,CAE9B,CAAC,CAAC,CAAC,CACP,CAAC,CAAC,CACN,CAAC",
  "names": ["CACHE_KEY", "publicPath", "CACHES", "p", "publicPath", "_event", "CACHE_KEY", "cache", "names", "n"]
}
