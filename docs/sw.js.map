{
  "version": 3,
  "sources": ["src/config.ts", "sw.ts"],
  "sourcesContent": ["export const DB_STORE_NAME = 'app-study-db';\r\nexport const DB_VERSION = 1;\r\nexport const CACHE_KEY = 'app-study-cache';\r\ndeclare const process: { env: { NODE_ENV: string } };\r\nexport const publicPath = process.env.NODE_ENV === 'development' ? '/' : '/app-study/';", "import { CACHE_KEY } from \"./src/config\";\r\nimport { FetchEvent } from \"./src/interface\";\r\nimport { publicPath } from './src/config'\r\n\r\nconst RENAME = {\r\n    __OUTPUT_PATH__: (a = '') => a\r\n}\r\nconst CACHES = [\r\n    publicPath,\r\n    RENAME.__OUTPUT_PATH__(\"./index.html\"),\r\n    RENAME.__OUTPUT_PATH__(\"./manifest.json\"),\r\n    RENAME.__OUTPUT_PATH__(\"./favicon.ico\"),\r\n    RENAME.__OUTPUT_PATH__(\"./src/index.tsx\"),\r\n    RENAME.__OUTPUT_PATH__(\"./img/frozen.css\"),\r\n    RENAME.__OUTPUT_PATH__(\"./img/math.png\"),\r\n    RENAME.__OUTPUT_PATH__(\"./img/study-48x48.png\"),\r\n]\r\n\r\nconst EXCEPTS = [\r\n    'sw.js',\r\n    'server-sent-bit'\r\n]\r\n\r\nself.addEventListener('install', function (_event) {\r\n    const event = _event as FetchEvent\r\n    event.waitUntil(Promise.all([\r\n        caches.open(CACHE_KEY).then(cache => cache.addAll(CACHES)),\r\n        self['skipWaiting']()\r\n    ]))\r\n})\r\nself.addEventListener('activate', function (_event) {\r\n    const event = _event as FetchEvent\r\n    event.waitUntil(Promise.all([\r\n        self['clients'].claim(),\r\n        caches.keys().then(names => Promise.all(names.map(n => {\r\n            if (n !== CACHE_KEY) {\r\n                return caches.delete(n)\r\n            }\r\n        })))\r\n    ]))\r\n})\r\nself.addEventListener('fetch', function (_event) {\r\n    const event = _event as FetchEvent\r\n    const { url } = event.request\r\n\r\n    for(let i = 0; i < CACHES.length; i++) {\r\n        if (url.indexOf(EXCEPTS[i]) != -1) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    event.respondWith(caches.match(event.request).then(res => res || fetch(event.request.clone()).then(function (resp) {\r\n        if (!resp || resp.status !== 200) {\r\n            return resp\r\n        }\r\n        caches.open(CACHE_KEY).then(cache => cache.put(event.request, resp.clone()))\r\n    })))\r\n})"],
  "mappings": "MAEO,IAAMA,EAAY,kBAEZC,EAA4D,cCAzE,IAAMC,EAAS,CACX,gBAAiB,CAACC,EAAI,KAAOA,CACjC,EACMC,EAAS,CACXC,EACAH,EAAO,gBAAgB,cAAc,EACrCA,EAAO,gBAAgB,iBAAiB,EACxCA,EAAO,gBAAgB,eAAe,EACtCA,EAAO,gBAAgB,iBAAiB,EACxCA,EAAO,gBAAgB,kBAAkB,EACzCA,EAAO,gBAAgB,gBAAgB,EACvCA,EAAO,gBAAgB,uBAAuB,CAClD,EAEMI,EAAU,CACZ,QACA,iBACJ,EAEA,KAAK,iBAAiB,UAAW,SAAUC,EAAQ,CACjCA,EACR,UAAU,QAAQ,IAAI,CACxB,OAAO,KAAKC,CAAS,EAAE,KAAKC,GAASA,EAAM,OAAOL,CAAM,CAAC,EACzD,KAAK,YAAe,CACxB,CAAC,CAAC,CACN,CAAC,EACD,KAAK,iBAAiB,WAAY,SAAUG,EAAQ,CAClCA,EACR,UAAU,QAAQ,IAAI,CACxB,KAAK,QAAW,MAAM,EACtB,OAAO,KAAK,EAAE,KAAKG,GAAS,QAAQ,IAAIA,EAAM,IAAIC,GAAK,CACnD,GAAIA,IAAMH,EACN,OAAO,OAAO,OAAOG,CAAC,CAE9B,CAAC,CAAC,CAAC,CACP,CAAC,CAAC,CACN,CAAC,EACD,KAAK,iBAAiB,QAAS,SAAUJ,EAAQ,CAC7C,IAAMK,EAAQL,EACR,CAAE,IAAAM,CAAI,EAAID,EAAM,QAEtB,QAAQE,EAAI,EAAGA,EAAIV,EAAO,OAAQU,IAC9B,GAAID,EAAI,QAAQP,EAAQQ,CAAC,CAAC,GAAK,GAC3B,OAIRF,EAAM,YAAY,OAAO,MAAMA,EAAM,OAAO,EAAE,KAAKG,GAAOA,GAAO,MAAMH,EAAM,QAAQ,MAAM,CAAC,EAAE,KAAK,SAAUI,EAAM,CAC/G,GAAI,CAACA,GAAQA,EAAK,SAAW,IACzB,OAAOA,EAEX,OAAO,KAAKR,CAAS,EAAE,KAAKC,GAASA,EAAM,IAAIG,EAAM,QAASI,EAAK,MAAM,CAAC,CAAC,CAC/E,CAAC,CAAC,CAAC,CACP,CAAC",
  "names": ["CACHE_KEY", "publicPath", "RENAME", "a", "CACHES", "publicPath", "EXCEPTS", "_event", "CACHE_KEY", "cache", "names", "n", "event", "url", "i", "res", "resp"]
}
